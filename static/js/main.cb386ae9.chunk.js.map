{"version":3,"sources":["components/Timeline/TimelineItem/TimelineItem.js","components/Timeline/Timeline.js","App.js","index.js"],"names":["TimelineItem","year","events","color","index","useState","showEvents","setShowEvents","direction","firstIcon","icon","eventsInfo","map","event","date","Date","newDate","Intl","DateTimeFormat","format","className","title","description","style","backgroundColor","onClick","prev","length","Timeline","colors","numberOfColor","dataByYear","groupBy","data","getFullYear","timelineItems","Object","entries","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA0EeA,EAxEM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAAY,EACnBC,oBAAS,GADU,mBAChDC,EADgD,KACpCC,EADoC,KAGjDC,EAAYJ,EAAQ,IAAM,EAAI,GAAK,QAEnCK,EAAYP,EAAO,GAAGQ,KAAOR,EAAO,GAAGQ,KAAO,sBAM9CC,EAAaT,EAAOU,KAAI,SAACC,EAAOT,GACpC,IAAMU,EAAO,IAAIC,KAAKF,EAAMC,MACtBE,EAAU,IAAIC,KAAKC,eAAe,MAAMC,OAAOL,GAErD,OACE,qBACEM,UAAS,oCAA+BZ,EAA/B,YACPF,EAAa,SAAW,IAF5B,SAME,sBAAKc,UAAS,iCAA4BZ,GAA1C,UACE,sBACEY,UAAS,+BAA0BZ,EAA1B,YACPF,EAAa,SAAW,IAF5B,UAKE,6BAAKO,EAAMQ,QACX,+BAAOL,IACP,4BAAIH,EAAMS,iBAEZ,qBACEC,MAAO,CAAEC,gBAAiBrB,GAC1BiB,UAAS,mCAA8BZ,SAdtCJ,MAqBX,OACE,qCACE,qBAAKgB,UAAS,wBAAmBZ,GAAjC,SACE,sBAAKY,UAAS,iCAA4BZ,GAA1C,UACE,qBACEe,MAAO,CAAEC,gBAAiBrB,GAC1BiB,UAAU,sBACVK,QAzCc,WACtBlB,GAAc,SAACmB,GAAD,OAAWA,MAqCnB,SAKE,mBAAGN,UAAWX,MAEhB,qBACEc,MAAO,CAAEC,gBAAiBrB,GAC1BiB,UAAU,2BAFZ,SAIE,qBAAKA,UAAU,uCAEjB,sBAAMG,MAAO,CAAEpB,MAAOA,GAASiB,UAAU,sBAAzC,SACGnB,IAEFC,EAAOyB,OAAS,EACf,qBAAKP,UAAU,sBAAf,SAAsClB,EAAOyB,SAC3C,UAIPzB,EAAOyB,OAAS,GAAKhB,M,OC/BbiB,EAlCE,WACf,IAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,WAC7CC,EAAgB,EAEdC,EAAaC,kBAAQC,KAAM,SAACpB,GAAD,OAC/B,IAAIE,KAAKF,EAAMC,MAAMoB,iBAGjBC,EAAgBC,OAAOC,QAAQN,GAAYnB,KAC/C,WAAiBR,GAAW,IAAD,mBAAzBH,EAAyB,KAAnBC,EAAmB,KAGzB,OAFI4B,IAAkBD,EAAOF,SAAQG,EAAgB,GAGnD,cAAC,EAAD,CACE7B,KAAMA,EACNC,OAAQA,EACRC,MAAO0B,EAAOC,KACd1B,MAAOA,GACFA,MAMb,OACE,sBAAKgB,UAAU,qBAAf,UACE,qBAAIA,UAAU,kBAAd,sBACW,sBAAMA,UAAU,iBAAhB,oBAEVe,MCrBQG,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCFNmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cb386ae9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TimelineItem = ({ year, events, color, index }) => {\r\n  const [showEvents, setShowEvents] = useState(false);\r\n\r\n  const direction = index % 2 === 0 ? '' : 'right';\r\n\r\n  const firstIcon = events[0].icon ? events[0].icon : 'far fa-address-book';\r\n\r\n  const handleShowEvent = () => {\r\n    setShowEvents((prev) => !prev);\r\n  };\r\n\r\n  const eventsInfo = events.map((event, index) => {\r\n    const date = new Date(event.date);\r\n    const newDate = new Intl.DateTimeFormat('pl').format(date);\r\n\r\n    return (\r\n      <div\r\n        className={`timeline-item--eventsInfo ${direction} ${\r\n          showEvents ? 'active' : ''\r\n        }`}\r\n        key={index}\r\n      >\r\n        <div className={`timeline-item--content ${direction}`}>\r\n          <div\r\n            className={`timeline-item--event ${direction} ${\r\n              showEvents ? 'active' : ''\r\n            }`}\r\n          >\r\n            <h4>{event.title}</h4>\r\n            <time>{newDate}</time>\r\n            <p>{event.description}</p>\r\n          </div>\r\n          <div\r\n            style={{ backgroundColor: color }}\r\n            className={`timeline-item--shortLine ${direction}`}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={`timeline-item ${direction}`}>\r\n        <div className={`timeline-item__content ${direction}`}>\r\n          <div\r\n            style={{ backgroundColor: color }}\r\n            className=\"timeline-item__icon\"\r\n            onClick={handleShowEvent}\r\n          >\r\n            <i className={firstIcon}></i>\r\n          </div>\r\n          <div\r\n            style={{ backgroundColor: color }}\r\n            className=\"timeline-item__shortLine\"\r\n          >\r\n            <div className=\"timeline-item__shortLine__circle\"></div>\r\n          </div>\r\n          <time style={{ color: color }} className=\"timeline-item__time\">\r\n            {year}\r\n          </time>\r\n          {events.length > 1 ? (\r\n            <div className=\"timeline-item__info\">{events.length}</div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      {events.length > 0 && eventsInfo}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimelineItem;\r\n","import { data } from '../../data/timelineData.json';\r\nimport TimelineItem from './TimelineItem';\r\nimport { groupBy } from 'lodash';\r\n\r\nconst Timeline = () => {\r\n  const colors = ['#845ec2', '#ffc75f', '#f9f871', '#ff5e78'];\r\n  let numberOfColor = 0;\r\n\r\n  const dataByYear = groupBy(data, (event) =>\r\n    new Date(event.date).getFullYear()\r\n  );\r\n\r\n  const timelineItems = Object.entries(dataByYear).map(\r\n    ([year, events], index) => {\r\n      if (numberOfColor === colors.length) numberOfColor = 0;\r\n\r\n      return (\r\n        <TimelineItem\r\n          year={year}\r\n          events={events}\r\n          color={colors[numberOfColor++]}\r\n          index={index}\r\n          key={index}\r\n        />\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"timeline-container\">\r\n      <h1 className=\"timeline__title\">\r\n        Timeline <span className=\"timeline__dots\">...</span>\r\n      </h1>\r\n      {timelineItems}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\nimport './App.scss';\nimport { Timeline } from './components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timeline />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}